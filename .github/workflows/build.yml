name: Build and Release

on:
  push:
    branches: 
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
        
      - name: Setup Android SDK
        if: matrix.os == 'ubuntu-latest'
        uses: android-actions/setup-android@v3

      - name: Create keystore properties
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" > android/app/keystore.jks
          echo "storePassword=${{ secrets.ANDROID_KEY_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter build apk --release
            flutter build appbundle --release
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter build windows --release
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            flutter build macos --release
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        with:
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/windows/runner/Release/*.exe
            build/macos/Build/Products/Release/*.app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}